"""
算数运算符
+ 加
- 减
* 乘
/ 除
// 整除
% 取余
** 幂
"""
print(1+1)
print(1-1)
print(1*1)
print(1/1)
print(1//1)
print(1%1)
print(1**1)

"""
赋值运算符
 = 基本赋值运算 将一个表达式赋值给一个变量
 += 加赋值
 -= 减赋值
 *= 乘赋值
 /= 除赋值
 //= 取整赋值
 %= 取余赋值
 **= 幂赋值
"""
a = 1
b = c =2
a += 1
a -= 1
a *= 1
a /= 1
a //= 1
a %= 1
a **= 1

"""
比较运算符（关系运算符）用于对常量、变量或表达式结果进行比较，真True，假Flase
> 大于
< 小于
== 等于
>= 大于等于
<= 小于等于
!= 不等于
is 引用对象是否相同
is not 引用对象是否不同

== 和 is区别
== 用来比较两个变量是否相等， is 用来比较两个变量引用是否是同一个对象
"""
print(a > b)
print(a < b)
print(a == b)
print(a >= b)
print(a <= b)
print(a != b)
print(a is b)
print(a is not b)

"""
逻辑运算符
and 逻辑与运算 
or 逻辑或运算 
not 逻辑非运算
Python 中and和or不一定会计算右边表达式的值，有时候只计算左边值就能得到结果。另外and和or运算符会将其中一个表达式
的值作为结果，而不是将True或False作为结果

对于 and 运算符，两边的值都为真时最终结果才为真，但是只要其中有一个值为假，那么最终结果就是假，所以 Python 按照下面的规则执行 and 运算：
如果左边表达式的值为假，那么就不用计算右边表达式的值了，因为不管右边表达式的值是什么，都不会影响最终结果，最终结果都是假，此时 and 会把左边表达式的值作为最终结果。
如果左边表达式的值为真，那么最终值是不能确定的，and 会继续计算右边表达式的值，并将右边表达式的值作为最终结果。

对于 or 运算符，情况是类似的，两边的值都为假时最终结果才为假，只要其中有一个值为真，那么最终结果就是真，所以 Python 按照下面的规则执行 or 运算：
如果左边表达式的值为真，那么就不用计算右边表达式的值了，因为不管右边表达式的值是什么，都不会影响最终结果，最终结果都是真，此时 or 会把左边表达式的值作为最终结果。
如果左边表达式的值为假，那么最终值是不能确定的，or 会继续计算右边表达式的值，并将右边表达式的值作为最终结果。
"""
print(1 and 2)
print(2 and 1)
print(1 and 1)
print(1 or 2)
print(False or 1)
print(1 or 1)
print(not False)

"""
三目运算符
max = a if a>b else b
"""