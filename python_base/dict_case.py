"""
字典
    无序、可变的序列，元素是键值对形式出现，Python中唯一的映射类型。元素对应索引称为键，元素对应值称为值
特征
    通过键而不是通过索引来读取元素	字典类型有时也称为关联数组或者散列表（hash）。它是通过键将一系列的值联系起来的，这样就可以通过键从字典中获取指定项，但不能通过索引来获取。
    字典是任意数据类型的无序集合	和列表、元组不同，通常会将索引值 0 对应的元素称为第一个元素，而字典中的元素是无序的。
    字典是可变的，并且可以任意嵌套	字典可以在原处增长或者缩短（无需生成一个副本），并且它支持任意深度的嵌套，即字典存储的值也可以是列表或其它的字典。
    字典中的键必须唯一	字典中，不支持同一个键出现多次，否则只会保留最后一个键值对。
    字典中的键必须不可变	字典中每个键值对的键是不可变的，只能使用数字、字符串或者元组，不能使用列表。
创建字典
    {}
    dict = {"name": "tom"}
    fromkeys(list, value)
    dict()
元素访问
    dict[key] 如果key不存在回报错
    dict.get(key) 如果key不存在，会返回None值
删除字典
    del 删除堆栈中字典的指向
添加元素
    dict[key] = value
修改元素
    dict[key] = value
    dict.update({key: value})
"""
d1 = {}
d2 = {"name": "tom"}
category = ["语文", "数学", "英语"]
d3 = dict.fromkeys(category, 80)
d4 = dict()
print(d1, d2, d3, d4)
value = d3.get("语文")
print(value)
d2["age"] = 20
print(d2)